apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: multi-arch-test
  region: {REGION}
  version: "1.21"
vpc:
  clusterEndpoints:
      publicAccess: true
      privateAccess: true  
availabilityZones: [{REGION}"a",{REGION}"b"]   
iam:
  withOIDC: true
  serviceAccounts:
  - metadata:
      name: cluster-autoscaler
      namespace: kube-system
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true
    roleName: eksctl-cluster-autoscaler-role
  - metadata:
      name: oss
      namespace: oss
      labels: {aws-usage: "application"}
    attachPolicyARNs:
    - arn:aws:iam::{ACCOUNT_ID}:policy/emr-on-eks-nvme-execution-role-policy
managedNodeGroups: 
  - name: C5_4
    instanceType: c5.4xlarge
    availabilityZones: [{REGION}"a"] 
    preBootstrapCommands:
      - "IDX=1;for DEV in /dev/nvme[1-9]n1;do sudo mkfs.xfs ${DEV}; sudo mkdir -p /local${IDX}; sudo echo ${DEV} /local${IDX} xfs defaults,noatime 1 2 >> /etc/fstab; IDX=$((${IDX} + 1)); done"
      - "sudo mount -a"
      - "sudo chown ec2-user:ec2-user /local*"
    volumeSize: 20
    volumeType: gp3
    minSize: 1
    desiredCapacity: 1
    additionalVolumes:
      - volumeName: '/dev/sdf'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400
      - volumeName: '/dev/sdg'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400  
      - volumeName: '/dev/sdh'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400    
      - volumeName: '/dev/sdi'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400  
    maxSize: 30
    tags:
      # required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/eks-nvme: "owned"  
  - name: C6g_8
    instanceType: c6g.8xlarge
    availabilityZones: [{REGION}"a"] 
    preBootstrapCommands:
      - "IDX=1;for DEV in /dev/nvme[1-9]n1;do sudo mkfs.xfs ${DEV}; sudo mkdir -p /local${IDX}; sudo echo ${DEV} /local${IDX} xfs defaults,noatime 1 2 >> /etc/fstab; IDX=$((${IDX} + 1)); done"
      - "sudo mount -a"
      - "sudo chown ec2-user:ec2-user /local*"
    volumeSize: 20
    volumeType: gp3
    minSize: 1
    desiredCapacity: 1
    additionalVolumes:
      - volumeName: '/dev/sdf'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400
      - volumeName: '/dev/sdg'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400  
      - volumeName: '/dev/sdh'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400    
      - volumeName: '/dev/sdi'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400  
    maxSize: 30
    tags:
      # required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/eks-nvme: "owned"    
  - name: C7g_8
    instanceType: c7g.8xlarge
    availabilityZones: [{REGION}"b"]
    preBootstrapCommands:
      - "IDX=1;for DEV in /dev/nvme[1-9]n1;do sudo mkfs.xfs ${DEV}; sudo mkdir -p /local${IDX}; sudo echo ${DEV} /local${IDX} xfs defaults,noatime 1 2 >> /etc/fstab; IDX=$((${IDX} + 1)); done"
      - "sudo mount -a"
      - "sudo chown ec2-user:ec2-user /local*"
    volumeSize: 20
    volumeType: gp3
    minSize: 1
    desiredCapacity: 1
    additionalVolumes:
      - volumeName: '/dev/sdf'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400
      - volumeName: '/dev/sdg'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400  
      - volumeName: '/dev/sdh'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400    
      - volumeName: '/dev/sdi'
        volumeSize: 128
        volumeType: io1
        volumeIOPS: 6400     
    maxSize: 30
    tags:
      # required for cluster-autoscaler auto-discovery
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/eks-nvme: "owned"
  
# enable all of the control plane logs
cloudWatch:
 clusterLogging:
   enableTypes: ["*"]
