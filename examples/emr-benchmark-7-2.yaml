# // Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# // SPDX-License-Identifier: MIT-0
apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: emr-operator-benchmark-minset
  namespace: emr
spec:
  type: Scala
  mode: cluster
  image: public.ecr.aws/myang-poc/eks-spark-benchmark:emr7.2.0-java8
  imagePullPolicy: IfNotPresent
  sparkVersion: 3.5.1
  mainClass: com.amazonaws.eks.tpcds.BenchmarkSQL
  mainApplicationFile: local:///usr/lib/spark/examples/jars/eks-spark-benchmark-assembly-1.0.jar
  arguments:
  # TPC-DS data localtion
    - "s3://$(BUCKET_PARAM)/BLOG_TPCDS-TEST-3T-partitioned"
  # results location
    - "s3://$(BUCKET_PARAM)/EMR_OPERATOR_TPCDS-TEST-3T-RESULT"
  # Path to kit in the docker image
    - "/opt/tpcds-kit/tools"
  # Data Format
    - "parquet"
  # Scale factor (in GB)
    - "3000"
  # Number of iterations
    - "1"
  # Optimize queries with hive tables
    - "false"
  # Filter queries, will run all if empty - "q98-v2.4,q99-v2.4,ss_max-v2.4,q95-v2.4"
    - "" 
  # Logging set to WARN
    - "true"
  hadoopConf:
    fs.s3.customAWSCredentialsProvider: com.amazonaws.auth.WebIdentityTokenCredentialsProvider
    fs.s3.impl: com.amazon.ws.emr.hadoop.fs.EmrFileSystem
    fs.AbstractFileSystem.s3.impl: org.apache.hadoop.fs.s3.EMRFSDelegate
    fs.s3.buffer.dir: /data1/s3
    fs.s3.getObject.initialSocketTimeoutMilliseconds: "2000"
    mapreduce.fileoutputcommitter.algorithm.version.emr_internal_use_only.EmrFileSystem: "2"
    mapreduce.fileoutputcommitter.cleanup-failures.ignored.emr_internal_use_only.EmrFileSystem: "true"
  sparkConf:
    spark.kubernetes.driver.annotation.name: emr-operator-benchmark-minmalset
    spark.kubernetes.executor.annotation.name: emr-operator-benchmark-minmalset
    # spark.kubernetes.driver.podTemplateFile: "s3://S3BUCKET_NAME/app_code/pod-template/driver-pod-template.yaml"
    # spark.kubernetes.executor.podTemplateFile: "s3://S3BUCKET_NAME/app_code/pod-template/executor-pod-template.yaml"
    spark.driver.extraClassPath: /usr/share/aws/aws-java-sdk-v2/*:/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/home/hadoop/extrajars/*
    spark.executor.extraClassPath: /usr/share/aws/aws-java-sdk-v2/*:/usr/lib/hadoop-lzo/lib/*:/usr/lib/hadoop/hadoop-aws.jar:/usr/share/aws/aws-java-sdk/*:/usr/share/aws/emr/emrfs/conf:/usr/share/aws/emr/emrfs/lib/*:/usr/share/aws/emr/emrfs/auxlib/*:/usr/share/aws/emr/security/conf:/usr/share/aws/emr/security/lib/*:/usr/share/aws/hmclient/lib/aws-glue-datacatalog-spark-client.jar:/usr/share/java/Hive-JSON-Serde/hive-openx-serde.jar:/usr/share/aws/sagemaker-spark-sdk/lib/sagemaker-spark-sdk.jar:/home/hadoop/extrajars/*
    spark.network.timeout: 2000s
    spark.executor.heartbeatInterval: 300s
    spark.kubernetes.executor.podNamePrefix: emr-operator
    spark.kubernetes.node.selector.eks.amazonaws.com/nodegroup: c5d9b
  driver:
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
    initContainers:  
      - name: volume-permission
        image: busybox
        command: ['sh', '-c', 'mkdir /data1; chown -R 999:1000 /data1'] 
        volumeMounts:
          - name: spark-local-dir-1
            mountPath: /data1     
    env:
      - name: BUCKET_PARAM
        valueFrom:
          configMapKeyRef:
            name: special-config
            key: codeBucket
    cores: 3
    coreLimit: "4.1"
    memory: "4g"
    memoryOverhead: "1000"
    serviceAccount: emr-containers-sa-spark
  executor:
    volumeMounts:
      - name: spark-local-dir-1
        mountPath: /data1
    initContainers:  
      - name: volume-permission
        image: busybox
        command: ['sh', '-c', 'mkdir /data1; chown -R 999:1000 /data1'] 
        volumeMounts:
          - name: spark-local-dir-1
            mountPath: /data1     
    cores: 4
    coreLimit: "4.3"
    memory: "6g"
    memoryOverhead: "2g"
    # 8 executors per node  
    instances: 47
  volumes:
    - name: spark-local-dir-1
      hostPath:
        path: /local1
  restartPolicy:
    type: Never
